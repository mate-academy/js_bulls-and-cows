'use strict';

/**
 * Implement bullsAndCows function:
 *
 * Function takes 2 strings: generatedNumber (generated by computer) and
 * enteredNumber (entered by player) and returns count of bulls and cows
 * according to rules (see readme.md). Each parameter should be exactly 4 digits
 * long.
 *
 * Function returns result as object with properties 'bulls' and 'cows' where
 * 'result.bulls' is a count of bulls and result.cows is a count of cows.
 *
 * If wrong parameter enteredNumber is given function returns undefined.
 *
 * bullsAndCows('1234', '1345') === [1, 2]
 * bullsAndCows('1234', '1234') === [4, 0]
 * bullsAndCows('1234', '') === undefined
 * bullsAndCows('1234', '12') === undefined
 * bullsAndCows('1234', 'asdf') === undefined
 * bullsAndCows('1234', '1234567890') === undefined
 *
 * @param {string} generatedNumber - generated by computer
 * @param {string} enteredNumber - entered by a player
 *
 * @return {object} - like {bulls: 0, cows: 0}
 */
function bullsAndCows(generatedNumber, enteredNumber) {
  let bullsCounter = 0;
  let cowsCounter = 0;
  let foundRepeatedNumber = 0;

  const bullsAndCowsInfo = {
    bulls: bullsCounter,
    cows: cowsCounter,
  };

  if (generatedNumber === undefined
    || enteredNumber === undefined
    || generatedNumber.length !== 4
    || enteredNumber.length !== 4) {
    return undefined;
  }

  const generatedNumberList = generatedNumber.split('');
  const enteredNumberList = enteredNumber.split('');

  enteredNumberList.forEach((digit, pos) => {
    if (enteredNumberList.indexOf(digit) !== pos) {
      foundRepeatedNumber += 1;
    };
  });

  if (foundRepeatedNumber !== 0) {
    return undefined;
  }

  generatedNumberList.map(digit => {
    if (enteredNumberList.includes(digit)
      && generatedNumberList.indexOf(digit)
      === enteredNumberList.indexOf(digit)) {
      bullsCounter += 1;
    } else if (enteredNumberList.includes(digit)) {
      cowsCounter += 1;
    }
  });

  bullsAndCowsInfo.bulls = bullsCounter;
  bullsAndCowsInfo.cows = cowsCounter;

  return bullsAndCowsInfo;
}

module.exports = bullsAndCows;
